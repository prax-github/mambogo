spring:
  application:
    name: gateway-service
  config:
    import: optional:configserver:http://localhost:8888
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      # Rate limiting configuration
      filter:
        request-rate-limiter:
          # Deny empty key (when key resolver returns empty)
          deny-empty-key: false
          # Include response headers
          include-headers: true
      # Global request size limits
      httpclient:
        max-header-size: 8KB
        max-initial-line-length: 4KB
      routes:
        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/api/products/**
          filters:
            - StripPrefix=1
        - id: cart-service
          uri: lb://cart-service
          predicates:
            - Path=/api/cart/**
          filters:
            - StripPrefix=1
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/api/orders/**
          filters:
            - StripPrefix=1
        - id: payment-service
          uri: lb://payment-service
          predicates:
            - Path=/api/payments/**
          filters:
            - StripPrefix=1
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KC_ISSUER:http://localhost:8081/realms/ecommerce}
          jwk-set-uri: ${KC_ISSUER:http://localhost:8081/realms/ecommerce}/protocol/openid-connect/certs
          # Additional JWT validation settings
          claim-set-uri: ${KC_ISSUER:http://localhost:8081/realms/ecommerce}/protocol/openid-connect/userinfo
  # Redis Configuration for Rate Limiting
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

server:
  port: 8080
  # Request size limits at server level
  max-http-header-size: 8KB
  max-http-post-size: 1MB

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true
    metadata-map:
      management.port: ${server.port}

management:
  endpoints.web.exposure.include: health,info,prometheus,metrics
  tracing.sampling.probability: 1.0
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        spring.cloud.gateway.requests: true
      percentiles:
        spring.cloud.gateway.requests: 0.5,0.95,0.99
management.zipkin.tracing.endpoint: ${ZIPKIN_ENDPOINT:http://localhost:9411/api/v2/spans}

# Gateway validation configuration
gateway:
  validation:
    max-request-size: 1048576  # 1MB
    max-header-size: 8192      # 8KB
    max-headers-count: 50
    max-query-params: 20
    max-path-length: 2048
    enable-security-validation: true
    enable-content-type-validation: true
    enable-size-validation: true
    allowed-content-types:
      - application/json
      - application/x-www-form-urlencoded
      - multipart/form-data
      - text/plain
    trusted-ip-ranges:
      - 127.0.0.1
      - ::1
      - 10.0.0.0/8
      - 172.16.0.0/12
      - 192.168.0.0/16

# Logging configuration for rate limiting and validation
logging:
  level:
    com.mambogo.gateway.config: INFO
    com.mambogo.gateway.filter: INFO
    org.springframework.cloud.gateway.filter.ratelimit: DEBUG
    org.springframework.data.redis: INFO
    SECURITY: WARN
