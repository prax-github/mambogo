spring:
  application:
    name: product-service
  config:
    import: optional:configserver:http://localhost:8888
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5433/products}
    username: ${DB_USER:postgres}
    password: ${DB_PASS:postgres}
  jpa:
    hibernate.ddl-auto: validate
    open-in-view: false
    properties.hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KC_ISSUER:http://localhost:8081/realms/ecommerce}

server:
  port: 8082

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true
    metadata-map:
      management.port: ${server.port}

management:
  endpoints.web.exposure.include: health,info,prometheus
  tracing.sampling.probability: 1.0
management.zipkin.tracing.endpoint: ${ZIPKIN_ENDPOINT:http://localhost:9411/api/v2/spans}

# Resilience4j Configuration
resilience4j:
  timelimiter:
    instances:
      outbound:
        timeoutDuration: 3s
  retry:
    instances:
      outbound:
        maxRetryAttempts: 3
        waitDuration: 500ms
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2.0
        randomizedWait: true
        retryExceptions:
          - java.io.IOException
          - org.springframework.web.reactive.function.client.WebClientRequestException
        ignoreExceptions:
          - org.springframework.web.reactive.function.client.WebClientResponseException$BadRequest
  circuitbreaker:
    instances:
      outbound:
        slidingWindowSize: 20
        minimumNumberOfCalls: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true

# Logging
logging:
  level:
    io.github.resilience4j: INFO

# Application-specific JWT Configuration
app:
  security:
    jwt:
      claims:
        realm-access: realm_access
        roles: roles
        preferred-username: preferred_username
        email: email
        full-name: name
        scope: scope
        audience: aud
      roles:
        admin: ADMIN
        user: USER
      authorities:
        claim-name: realm_access.roles
        prefix: ROLE_
      scopes:
        product-read: "product:read"
        cart-manage: "cart:manage"
        order-write: "order:write"
        payment-process: "payment:process"
        admin-all: "admin:all"
    error:
      service-name: product-service
      authentication:
        code: AUTHENTICATION_FAILED
        message: Authentication required
      authorization:
        code: ACCESS_DENIED
        message: Insufficient permissions