openapi: 3.0.3
info:
  title: Order Service API
  description: API for managing orders in the e-commerce system
  version: 1.0.0
  contact:
    name: Mambogo Team
    email: team@mambogo.com

servers:
  - url: http://localhost:8084
    description: Local development server
  - url: http://gateway-service:8080/api/orders
    description: Gateway proxy

paths:
  /orders:
    post:
      summary: Create new order
      description: Create a new order with idempotency support
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Order already exists (idempotency)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      summary: Get user's orders
      description: Retrieve orders for a specific user
      operationId: getUserOrders
      parameters:
        - name: userId
          in: query
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: size
          in: query
          description: Page size
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
        - name: status
          in: query
          description: Filter by order status
          required: false
          schema:
            type: string
            enum: [PENDING, CONFIRMED, PROCESSING, SHIPPED, DELIVERED, CANCELLED]
      responses:
        '200':
          description: Orders retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderListResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /orders/{id}:
    get:
      summary: Get order by ID
      description: Retrieve a specific order by its ID
      operationId: getOrderById
      parameters:
        - name: id
          in: path
          required: true
          description: Order ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Order retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /orders/{id}/cancel:
    post:
      summary: Cancel order
      description: Cancel a specific order
      operationId: cancelOrder
      parameters:
        - name: id
          in: path
          required: true
          description: Order ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOrderRequest'
      responses:
        '200':
          description: Order cancelled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Order cannot be cancelled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    OrderItem:
      type: object
      required:
        - productId
        - productName
        - price
        - quantity
      properties:
        productId:
          type: string
          format: uuid
          description: Product ID
        productName:
          type: string
          description: Product name
        price:
          type: number
          format: decimal
          minimum: 0
          description: Product price at time of order
        quantity:
          type: integer
          minimum: 1
          description: Item quantity
        imageUrl:
          type: string
          format: uri
          description: Product image URL

    Address:
      type: object
      required:
        - street
        - city
        - state
        - zipCode
        - country
      properties:
        street:
          type: string
          description: Street address
        city:
          type: string
          description: City
        state:
          type: string
          description: State/province
        zipCode:
          type: string
          description: ZIP/postal code
        country:
          type: string
          description: Country
        apartment:
          type: string
          description: Apartment/suite number

    Order:
      type: object
      required:
        - id
        - userId
        - items
        - totalAmount
        - status
        - shippingAddress
      properties:
        id:
          type: string
          format: uuid
          description: Order ID
        userId:
          type: string
          format: uuid
          description: User ID
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          description: Order items
        totalAmount:
          type: number
          format: decimal
          minimum: 0
          description: Total order amount
        status:
          type: string
          enum: [PENDING, CONFIRMED, PROCESSING, SHIPPED, DELIVERED, CANCELLED]
          description: Order status
        shippingAddress:
          $ref: '#/components/schemas/Address'
        paymentId:
          type: string
          format: uuid
          description: Payment ID
        trackingNumber:
          type: string
          description: Shipping tracking number
        notes:
          type: string
          description: Order notes
        createdAt:
          type: string
          format: date-time
          description: Order creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Order last update timestamp

    CreateOrderRequest:
      type: object
      required:
        - userId
        - items
        - shippingAddress
        - idempotencyKey
      properties:
        userId:
          type: string
          format: uuid
          description: User ID
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          description: Order items
        shippingAddress:
          $ref: '#/components/schemas/Address'
        notes:
          type: string
          description: Order notes
        idempotencyKey:
          type: string
          description: Idempotency key to prevent duplicate orders

    CancelOrderRequest:
      type: object
      required:
        - reason
      properties:
        reason:
          type: string
          description: Cancellation reason

    OrderResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Order'
        message:
          type: string
          description: Response message

    OrderListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        pagination:
          $ref: '#/components/schemas/PaginationInfo'
        message:
          type: string
          description: Response message

    PaginationInfo:
      type: object
      properties:
        page:
          type: integer
          description: Current page number
        size:
          type: integer
          description: Page size
        totalElements:
          type: integer
          description: Total number of elements
        totalPages:
          type: integer
          description: Total number of pages

    ErrorResponse:
      type: object
      required:
        - code
        - message
        - traceId
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
        traceId:
          type: string
          description: Request trace ID for debugging
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
