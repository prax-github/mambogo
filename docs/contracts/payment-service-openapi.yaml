openapi: 3.0.3
info:
  title: Payment Service API
  description: API for processing payments in the e-commerce system
  version: 1.0.0
  contact:
    name: Mambogo Team
    email: team@mambogo.com

servers:
  - url: http://localhost:8085
    description: Local development server
  - url: http://gateway-service:8080/api/payments
    description: Gateway proxy

paths:
  /payments:
    post:
      summary: Process payment
      description: Process a payment for an order
      operationId: processPayment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessPaymentRequest'
      responses:
        '201':
          description: Payment processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Payment validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      summary: Get user's payments
      description: Retrieve payment history for a specific user
      operationId: getUserPayments
      parameters:
        - name: userId
          in: query
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: size
          in: query
          description: Page size
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
        - name: status
          in: query
          description: Filter by payment status
          required: false
          schema:
            type: string
            enum: [PENDING, AUTHORIZED, COMPLETED, FAILED, REFUNDED]
      responses:
        '200':
          description: Payments retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentListResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /payments/{id}:
    get:
      summary: Get payment by ID
      description: Retrieve a specific payment by its ID
      operationId: getPaymentById
      parameters:
        - name: id
          in: path
          required: true
          description: Payment ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Payment retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        '404':
          description: Payment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /payments/{id}/refund:
    post:
      summary: Refund payment
      description: Process a refund for a payment
      operationId: refundPayment
      parameters:
        - name: id
          in: path
          required: true
          description: Payment ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundPaymentRequest'
      responses:
        '200':
          description: Refund processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Payment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Payment cannot be refunded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    PaymentMethod:
      type: object
      required:
        - type
        - cardNumber
        - expiryMonth
        - expiryYear
        - cvv
      properties:
        type:
          type: string
          enum: [CREDIT_CARD, DEBIT_CARD]
          description: Payment method type
        cardNumber:
          type: string
          pattern: '^[0-9]{16}$'
          description: Card number (last 4 digits only for security)
        expiryMonth:
          type: integer
          minimum: 1
          maximum: 12
          description: Card expiry month
        expiryYear:
          type: integer
          minimum: 2024
          description: Card expiry year
        cvv:
          type: string
          pattern: '^[0-9]{3,4}$'
          description: Card CVV
        cardholderName:
          type: string
          description: Cardholder name

    Payment:
      type: object
      required:
        - id
        - orderId
        - userId
        - amount
        - currency
        - status
        - paymentMethod
      properties:
        id:
          type: string
          format: uuid
          description: Payment ID
        orderId:
          type: string
          format: uuid
          description: Associated order ID
        userId:
          type: string
          format: uuid
          description: User ID
        amount:
          type: number
          format: decimal
          minimum: 0
          description: Payment amount
        currency:
          type: string
          default: USD
          description: Payment currency
        status:
          type: string
          enum: [PENDING, AUTHORIZED, COMPLETED, FAILED, REFUNDED]
          description: Payment status
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethod'
        transactionId:
          type: string
          description: External payment processor transaction ID
        failureReason:
          type: string
          description: Reason for payment failure
        refundAmount:
          type: number
          format: decimal
          minimum: 0
          description: Refunded amount
        refundReason:
          type: string
          description: Reason for refund
        createdAt:
          type: string
          format: date-time
          description: Payment creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Payment last update timestamp

    ProcessPaymentRequest:
      type: object
      required:
        - orderId
        - userId
        - amount
        - paymentMethod
      properties:
        orderId:
          type: string
          format: uuid
          description: Order ID to pay for
        userId:
          type: string
          format: uuid
          description: User ID
        amount:
          type: number
          format: decimal
          minimum: 0
          description: Payment amount
        currency:
          type: string
          default: USD
          description: Payment currency
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethod'

    RefundPaymentRequest:
      type: object
      required:
        - reason
      properties:
        amount:
          type: number
          format: decimal
          minimum: 0
          description: Refund amount (partial refund if specified)
        reason:
          type: string
          description: Refund reason

    PaymentResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Payment'
        message:
          type: string
          description: Response message

    PaymentListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
        pagination:
          $ref: '#/components/schemas/PaginationInfo'
        message:
          type: string
          description: Response message

    PaginationInfo:
      type: object
      properties:
        page:
          type: integer
          description: Current page number
        size:
          type: integer
          description: Page size
        totalElements:
          type: integer
          description: Total number of elements
        totalPages:
          type: integer
          description: Total number of pages

    ErrorResponse:
      type: object
      required:
        - code
        - message
        - traceId
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
        traceId:
          type: string
          description: Request trace ID for debugging
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
